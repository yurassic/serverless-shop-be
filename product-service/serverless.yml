service: product-service
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name
frameworkVersion: '3'

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs14.x
  region: eu-west-1
  stage: dev
  httpApi:
    cors: true
  environment:
    DYNAMODB_PRODUCTS_TABLE: products
    DYNAMODB_STOCKS_TABLE: stocks
    SQS_URL: { Ref: NewSQSQueue }
    SNS_ARN: { Ref: SNSTopic }

  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 'dynamodb:PutItem'
            - 'dynamodb:Get*'
            - 'dynamodb:Scan*'
            - 'dynamodb:Query*'
            - 'dynamodb:UpdateItem'
            - 'dynamodb:DeleteItem'
          Resource: 
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.DYNAMODB_PRODUCTS_TABLE}
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.DYNAMODB_STOCKS_TABLE}
        - Effect: Allow
          Action:
            - sqs:*
          Resource:
            Fn::GetAtt: [ NewSQSQueue, Arn ]
        - Effect: Allow
          Action:
            - sns:*
          Resource:
            Ref: SNSTopic

functions:
  getProductsList:
    handler: handlers/getProductsList.handler
    events:
      - httpApi:
          method: get
          path: /products
  getProductsById:
    handler: handlers/getProductsById.handler
    events:
      - httpApi:
          method: get
          path: /products/{productId}
  createProduct:
    handler: handlers/createProduct.handler
    events:
      - httpApi:
          method: post
          path: /products
  catalogBatchProcess:
    handler: handlers/catalogBatchProcess.handler
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - NewSQSQueue
              - Arn

resources:
 Resources:
   NewSQSQueue:
     Type: "AWS::SQS::Queue"
     Properties:
       QueueName: catalogItemsQueue
   SNSTopic:
     Type: "AWS::SNS::Topic"
     Properties:
       TopicName: createProductTopic
   SNSSubscription:
     Type: "AWS::SNS::Subscription"
     Properties:
       Endpoint: yuriy_nyay@epam.com
       Protocol: email
       TopicArn:
        Ref: SNSTopic

